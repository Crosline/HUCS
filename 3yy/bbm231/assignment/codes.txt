module fulladder(a,b,cin,s,cout);
	input a,b,cin;
	output s,cout;
	//assign s=a^b^cin;
	//assign cout=((a^b)&cin)|(a&b);
	
	halfadder ha0( .a(a), .b(b), .s(ss1), .cout(cc1) );
	halfadder ha1( .a(cin), .b(ss1), .s(s), .cout(cc2) );
	
	xor(cout,cc1,cc2);
	
endmodule


module halfadder(a,b,s,cout);
	input a,b;
	output s,cout;
	xor(s,a,b);
	and(cout,a,b);
endmodule




module fourbitadder(a,b,cFinal,s);
	input [0:3] a;
	input [0:3] b;
	input cin;
	output cFinal;
	output [0:3] s;
	
	/**/
	
	assign cin=1'b0;
	
	//fulladder fa0( .a(a[0]), .b(b[0]), .cin(cin), .s(s[0]), .cout(ripple0) );
	//fulladder fa1( .a(a[1]), .b(b[1]), .cin(ripple0), .s(s[1]), .cout(ripple1) );
	//fulladder fa2( .a(a[2]), .b(b[2]), .cin(ripple1), .s(s[2]), .cout(ripple2) );
	//fulladder fa3( .a(a[3]), .b(b[3]), .cin(ripple2), .s(s[3]), .cout(cFinal) );

endmodule




